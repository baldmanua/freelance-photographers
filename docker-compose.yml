services:
  auth-app:
    image: webdevops/php-apache-dev:8.4
    container_name: auth-app
    volumes:
      - ./services/auth-service:/app
    environment:
      WEB_DOCUMENT_ROOT: /app/public
      WEB_DOCUMENT_INDEX: index.php
      XDEBUG_MODE: '${XDEBUG_MODE:-off}'
      XDEBUG_START_WITH_REQUEST: 1
      XDEBUG_CLIENT_HOST: host.docker.internal
    ports:
      - '${AUTH_APP_EXT_PORT:-8081}:80'
    networks:
      - backend
    working_dir: /app
    depends_on:
      - auth-db

  auth-db:
    image: postgres:15
    container_name: auth-db
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: secret
    volumes:
      - ./docker/auth-db/postgres-data:/var/lib/postgresql/data
    ports:
      - "${AUTH_DB_EXT_PORT:-54321}:5432"
    networks:
      - backend

  user-app:
    image: webdevops/php-apache-dev:8.4
    container_name: user-app
    volumes:
      - ./services/user-service:/app
    environment:
      WEB_DOCUMENT_ROOT: /app/public
      WEB_DOCUMENT_INDEX: index.php
      XDEBUG_MODE: '${XDEBUG_MODE:-off}'
      XDEBUG_START_WITH_REQUEST: 1
      XDEBUG_CLIENT_HOST: host.docker.internal
    ports:
      - '${USER_APP_EXT_PORT:-8082}:80'
    networks:
      - backend
    working_dir: /app/
    depends_on:
      - user-db

  user-db:
    image: postgres:15
    container_name: user-db
    environment:
      POSTGRES_DB: user_db
      POSTGRES_USER: user_user
      POSTGRES_PASSWORD: secret
    volumes:
      - ./docker/user-db/postgres-data:/var/lib/postgresql/data
    ports:
      - "${USER_DB_EXT_PORT:-54322}:5432"
    networks:
      - backend

  booking-app:
    image: webdevops/php-apache-dev:8.4
    container_name: booking-app
    volumes:
      - ./services/booking-service:/app
    environment:
      WEB_DOCUMENT_ROOT: /app/public
      WEB_DOCUMENT_INDEX: index.php
      XDEBUG_MODE: '${XDEBUG_MODE:-off}'
      XDEBUG_START_WITH_REQUEST: 1
      XDEBUG_CLIENT_HOST: host.docker.internal
    ports:
      - '${BOOKING_APP_EXT_PORT:-8083}:80'
    networks:
      - backend
    working_dir: /app/
    depends_on:
      - booking-db

  booking-db:
    image: postgres:15
    container_name: booking-db
    environment:
      POSTGRES_DB: booking_db
      POSTGRES_USER: booking_user
      POSTGRES_PASSWORD: secret
    volumes:
      - ./docker/booking-db/postgres-data:/var/lib/postgresql/data
    ports:
      - "${BOOKING_DB_EXT_PORT:-54323}:5432"
    networks:
      - backend

  swagger-ui:
    image: swaggerapi/swagger-ui
    container_name: swagger-ui
    ports:
      - "${SWAGGER_UI_EXT_PORT:-8080}:8080"
    environment:
      URLS: "[
      { url: 'doc/auth-service.yaml', name: 'Auth Service'}
      ]"
    volumes:
      - ./docs:/usr/share/nginx/html/doc
    networks:
      - backend

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    ports:
      - "${KAFKA_EXT_PORT:-9092}:9092"
    networks:
      - backend
    depends_on:
      - zookeeper

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "${ZOOKEEPER_EXT_PORT:-2181}:2181"
    networks:
      - backend

networks:
  backend: